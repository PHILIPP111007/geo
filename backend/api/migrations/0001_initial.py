# Generated by Django 4.2.3 on 2023-09-07 21:02

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GPSLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326, verbose_name='geo position point')),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'GPS Location',
            },
        ),
        migrations.CreateModel(
            name='IPv4Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_first', models.DecimalField(decimal_places=0, max_digits=13, verbose_name='first IP address in the block')),
                ('ip_last', models.DecimalField(decimal_places=0, max_digits=13, verbose_name='fast IP address in the block')),
                ('continent', models.CharField(max_length=2, verbose_name='two-letter continent code [AF, AS, EU, NA, OC, SA, AN]')),
                ('country', models.CharField(max_length=2, verbose_name='ISO 3166-1 alpha-2 country code (2 letter)')),
                ('stateprov', models.TextField(verbose_name='state or province name')),
                ('city', models.TextField(verbose_name='city name')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
            options={
                'verbose_name': 'IPv4 Location',
                'ordering': ['ip_first'],
            },
        ),
        migrations.CreateModel(
            name='IPv6Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_first', models.DecimalField(decimal_places=0, max_digits=39, verbose_name='first IP address in the block')),
                ('ip_last', models.DecimalField(decimal_places=0, max_digits=39, verbose_name='last IP address in the block')),
                ('continent', models.CharField(max_length=2, verbose_name='two-letter continent code [AF, AS, EU, NA, OC, SA, AN]')),
                ('country', models.CharField(max_length=2, verbose_name='ISO 3166-1 alpha-2 country code (2 letter)')),
                ('stateprov', models.TextField(verbose_name='state or province name')),
                ('city', models.TextField(verbose_name='city name')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
            options={
                'verbose_name': 'IPv6 Location',
                'ordering': ['ip_first'],
            },
        ),
    ]
